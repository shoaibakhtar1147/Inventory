//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CashandCarry.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CashCarryEntities3 : DbContext
    {
        public CashCarryEntities3()
            : base("name=CashCarryEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<tbl_Category> tbl_Category { get; set; }
        public virtual DbSet<tbl_Zone> tbl_Zone { get; set; }
        public virtual DbSet<tbl_Company> tbl_Company { get; set; }
        public virtual DbSet<tbl_CustomerTypes> tbl_CustomerTypes { get; set; }
        public virtual DbSet<tbl_employee> tbl_employee { get; set; }
        public virtual DbSet<tbl_Customer> tbl_Customer { get; set; }
        public virtual DbSet<View_tbl_Customer> View_tbl_Customer { get; set; }
        public virtual DbSet<tbl_Product> tbl_Product { get; set; }
        public virtual DbSet<View_tbl_Product> View_tbl_Product { get; set; }
        public virtual DbSet<tbl_Saledetail> tbl_Saledetail { get; set; }
        public virtual DbSet<tbl_SaleMAster> tbl_SaleMAster { get; set; }
        public virtual DbSet<View_DetailSale> View_DetailSale { get; set; }
        public virtual DbSet<Tbl_PurchaseDetail> Tbl_PurchaseDetail { get; set; }
        public virtual DbSet<Tbl_PurchaseMaster> Tbl_PurchaseMaster { get; set; }
    
        public virtual ObjectResult<Nullable<int>> SP_Cate_AddNew(Nullable<int> categoryID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Cate_AddNew", categoryIDParameter);
        }
    
        public virtual ObjectResult<SP_Zone_Search_Result> SP_Zone_Search(Nullable<int> zoneID)
        {
            var zoneIDParameter = zoneID.HasValue ?
                new ObjectParameter("ZoneID", zoneID) :
                new ObjectParameter("ZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Zone_Search_Result>("SP_Zone_Search", zoneIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Zone_AddNew(Nullable<int> zoneID)
        {
            var zoneIDParameter = zoneID.HasValue ?
                new ObjectParameter("ZoneID", zoneID) :
                new ObjectParameter("ZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Zone_AddNew", zoneIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> SP_Prod_AddNew(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("SP_Prod_AddNew", productIDParameter);
        }
    
        public virtual ObjectResult<SP_SaleInvoice_Search_Result> SP_SaleInvoice_Search(Nullable<int> invoiceNo)
        {
            var invoiceNoParameter = invoiceNo.HasValue ?
                new ObjectParameter("InvoiceNo", invoiceNo) :
                new ObjectParameter("InvoiceNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SaleInvoice_Search_Result>("SP_SaleInvoice_Search", invoiceNoParameter);
        }
    
        public virtual ObjectResult<SP_Cus_Search_Result> SP_Cus_Search(Nullable<int> customerID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Cus_Search_Result>("SP_Cus_Search", customerIDParameter);
        }
    }
}
